import numpy as np
import tensorflow as tf
class RLAgent:
    def __init__(self, input_dim, output_dim):
        self.model = tf.keras.models.Sequential([
            tf.keras.layers.Dense(24, input_dim=input_dim, activation='relu'),
            tf.keras.layers.Dense(24, activation='relu'),
            tf.keras.layers.Dense(output_dim, activation='linear')
        ])
        self.model.compile(optimizer='adam', loss='mse')
    def predict(self, state):
        return self.model.predict(state)
    def update(self, state, target):
        self.model.fit(state, target, epochs=1, verbose=0)
env = np.array([[0, 1], [0, -1], [1, 0], [-1, 0]])
agent = RLAgent(input_dim=2, output_dim=4)
state = np.array([[0, 0]])
target = np.array([[1, 0, 0, 0]])
agent.update(state, target)
print("Predicted Value:", agent.predict(state))
